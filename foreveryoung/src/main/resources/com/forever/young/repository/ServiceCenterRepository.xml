<?xml version="1.0" encoding="UTF-8"?>
<!-- DTD 선언 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.forever.young.repository.ServiceCenterRepository">

	<select id="listAll" resultType="NoticeDto">
		<!-- ref는 다른테이블을 의미한다.  -->
    <include refid="paging_header" />  
        <!-- 테이블로 부터 검색 -->
            select notice_no, notice_type, notice_title, notice_content, admin_no from notice
            <!-- notice_no의 내림차순으로 검색 -->
            <!-- where절은 (조건)은 include 태그를 이용했음 -->
        <include refid="search" />
            order by notice_no desc
 		<include refid="paging_footer" />        
    </select>
    
    <sql id="paging_header">
    <!-- 게시물을 한페이지에 10개씩 볼 수 있게하는 쿼리 윗부분-->
      select *
        from (
            select rownum as rn, A.*
            from ( 
    </sql>
    
    <sql id="paging_footer">
    <!-- 게시물을 한페이지에 10개씩 볼 수 있게하는 쿼리  아랫 부분-->
    <!-- 새로 매겨진 일련번호 1~10번 글까지 1페이지 -->
    <!-- 11~20번 글까지 2페이지.. -->
         	) A
        )where rn between #{start} and #{end}
    </sql>
    
 
    <sql id="search">
        <choose>
             <when test="keyword != '' ">
                where 
               		 notice_title like '%'||#{keyword}||'%'  
                     or  notice_content like '%' || #{keyword}||'%'
            </when>
        </choose>
    </sql>
	
	<!-- 1:1문의 리스트 -->
	<select id="inquiryList" resultType="Inquiry">
  		<![CDATA[
  			  	select I.* , C.user_id from inquiry I
				left outer join customer C on I.user_num = C.user_num
				where C.user_num = #{user_num}
  		]]>
	</select>

	<!-- 1:1문의 상세보기 -->
	<select id="inquiryDetail" resultType="InquiryVO">
		 select I.* , R.reply_no , R.reply_content , C.user_id  from inquiry I
 			left outer join customer C on C.user_num = I.user_num
 			left outer join reply R on R.inquiry_no = I.inquiry_no 
 			where I.inquiry_no = #{inquiry_no}	
	</select>
	
	<!-- 1:1문의  등록 -->
	<insert id="inquiryRegister">
		insert into inquiry (inquiry_no, inquiry_title, inquiry_content, inquiry_regDate, user_num)
		values(inquiry_seq.nextval, #{inquiry_title}, #{inquiry_content}, sysdate, #{user_num})
	</insert>
	
	<!-- 1:1문의  등록 후 상세페이지로 이동 -->
	<select id="inquiryRegisterAfter" resultType="int">
       select inquiry_seq.currval from dual
    </select>

	<!-- 1:1문의 수정 -->
	<select id="inquiryModify">
		update inquiry set
			 inquiry_title=#{inquiry_title} , 
			 inquiry_content=#{inquiry_content}
		 where inquiry_no =#{inquiry_no}
	</select>
	
	<!-- 1:1문의 삭제 -->
	<delete id="inquiryDelete">
		delete from inquiry where inquiry_no = #{inquiry_no}
	</delete>

</mapper>
