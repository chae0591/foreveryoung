<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.forever.young.repository.CustomerRepository">

	<insert id="regist">
		insert into customer
		values (customer_seq.nextval, 
		#{user_id}, #{user_pw}, #{user_name}, #{user_phone}, #{user_gender}, #{user_birth}, sysdate, null )
	</insert>
	
	<insert id="regist2">
		insert into customer
		values ( customer_seq.nextval, 
		#{user_id}, #{user_pw}, #{user_name}, #{user_phone}, #{user_gender, jdbcType=CHAR}, #{user_birth, jdbcType=DATE}, sysdate, null )
	</insert>
	
	<select id="login" resultType="Customer">
		select * from customer where user_id = #{user_id} and user_pw = #{user_pw}
	</select>
	
	<select id="findId" resultType="Customer">
		select * from customer where user_id = #{user_id}
	</select>
	
	<select id="findNum" resultType="Customer">
		select * from customer where user_num = #{user_num}
	</select>
	
	<update id="editInfo">
		update customer set 
		user_name = #{user_name}, user_phone = #{user_phone}, 
		user_gender = #{user_gender, jdbcType=CHAR}, user_birth = #{user_birth} 
		where user_num = #{user_num}
	</update>
	
	<update id="editPw">
		update customer set 
		user_pw = #{change_pw} 
		where user_num = #{user_num} and user_pw = #{current_pw}
	</update>
	
	<select id="findInquiry" resultType="MyPgInquiryVO">
		select I.*, R.reply_no from inquiry I left outer join reply R on I.inquiry_no = R.inquiry_no 
		where user_num = #{user_num} 
		and I.inquiry_regDate between systimestamp - NUMTODSINTERVAL(#{day_num}, 'DAY') and systimestamp 
		order by I.inquiry_regDate desc
	</select>
	
	<select id="myVoteList" resultType="MyPgVoteVO">
		select V.*, pb.product_name, pb.product_category, pb.product_price, pb.product_stock, 
        pb.product_brand, pb.product_skintype, pb.event_no, 
        pb.brand_name, pb.image_name, pb.image_type, pb.image_save_name  
        from vote V left outer join 
                (select p.*, b.*, pi.image_save_name, pi.image_type, pi.image_name from product_table P 
                join brand B on p.product_brand = b.brand_num 
                left outer join product_img pi on p.product_no = pi.product_no) PB 
                on v.product_no = pb.product_no
                where v.user_num = #{user_num} 
	</select>
	
	<select id="searchInquiryDate" resultType="MyPgInquiryVO" parameterType="map">
		select I.*, R.reply_no from inquiry I left outer join reply R on I.inquiry_no = R.inquiry_no 
		<where>
			<if test="user_num != null and user_num != ''">
				and user_num = #{user_num} 
			</if>
		
			<if test="(start_date != null and start_date != '') or (end_date != null and end_date != '')">
				and
				<choose>
					<when test="(start_date != null and start_date != '') and (end_date != null and end_date != '')">
						I.inquiry_regDate between to_date(${start_date} , 'YYYY-MM-DD HH24:MI:SS') and to_date(${end_date} , 'YYYY-MM-DD HH24:MI:SS') 
					</when>
					<when test="start_date != null and start_date != ''">
						<![CDATA[
							I.inquiry_regDate >= to_date(${start_date} , 'YYYY-MM-DD HH24:MI:SS')
						]]>
					</when>
					<otherwise>
						<![CDATA[
							I.inquiry_regDate <= to_date(${end_date} , 'YYYY-MM-DD HH24:MI:SS') 
						]]>	
					</otherwise>
				</choose>
			</if>
		</where>
		order by I.inquiry_regDate desc
	</select>
	
	<select id="searchInquiryTarget" resultType="MyPgInquiryVO" parameterType="map">
		select I.*, R.reply_no from inquiry I left outer join reply R on I.inquiry_no = R.inquiry_no 
		where user_num = #{user_num} 
		and (instr(I.inquiry_title, #{target}) > 0 or instr(I.inquiry_content, #{target}) > 0) 
		order by I.inquiry_regDate desc
	</select>
	
	<select id="myReviewList" resultType="MyPgReviewVO">
		select R.*, pb.product_name, pb.product_price, pb.brand_name, 
        pb.image_save_name, pb.image_type, pb.image_name 
        from review R left outer join (select p.*, b.*, pi.image_save_name, pi.image_type, pi.image_name from product_table P 
                join brand B on p.product_brand = b.brand_num 
                left outer join product_img pi on p.product_no = pi.product_no) pb
                on R.product_no = pb.product_no
                where R.user_num = #{user_num} 
                and R.review_date between systimestamp - NUMTODSINTERVAL(#{day_num}, 'DAY') and systimestamp 
                order by R.review_date desc
	</select>
	
	<select id="searchReviewDate" resultType="MyPgReviewVO" parameterType="map">
		select R.*, pb.product_name, pb.product_price, pb.brand_name, 
        pb.image_save_name, pb.image_type, pb.image_name 
        from review R left outer join (select p.*, b.*, pi.image_save_name, pi.image_type, pi.image_name from product_table P 
                join brand B on p.product_brand = b.brand_num 
                left outer join product_img pi on p.product_no = pi.product_no) pb
                on R.product_no = pb.product_no
                <where>
					<if test="user_num != null and user_num != ''">
						and user_num = #{user_num} 
					</if>
				
					<if test="(start_date != null and start_date != '') or (end_date != null and end_date != '')">
						and
						<choose>
							<when test="(start_date != null and start_date != '') and (end_date != null and end_date != '')">
								R.review_date between to_date(${start_date} , 'YYYY-MM-DD HH24:MI:SS') and to_date(${end_date} , 'YYYY-MM-DD HH24:MI:SS') 
							</when>
							<when test="start_date != null and start_date != ''">
								<![CDATA[
									R.review_date >= to_date(${start_date} , 'YYYY-MM-DD HH24:MI:SS')
								]]>
							</when>
							<otherwise>
								<![CDATA[
									R.review_date <= to_date(${end_date} , 'YYYY-MM-DD HH24:MI:SS') 
								]]>	
							</otherwise>
						</choose>
					</if>
				</where>
                order by R.review_date desc
	</select>
	
	<select id="searchReviewTarget" resultType="MyPgReviewVO" parameterType="map">
		select R.*, pb.product_name, pb.product_price, pb.brand_name, 
        pb.image_save_name, pb.image_type, pb.image_name 
        from review R left outer join (select p.*, b.*, pi.image_save_name, pi.image_type, pi.image_name from product_table P 
                join brand B on p.product_brand = b.brand_num 
                left outer join product_img pi on p.product_no = pi.product_no) pb
                on R.product_no = pb.product_no
                where R.user_num = #{user_num} 
                and (instr(R.review_title, #{target}) > 0 or instr(R.review_content, #{target}) > 0) or instr(pb.product_name, #{target}) > 0) 
                order by R.review_date desc
	</select>

</mapper>