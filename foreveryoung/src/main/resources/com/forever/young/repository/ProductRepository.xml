<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forever.young.repository.ProductRepository">
	
	<insert id="registProduct">
	<selectKey keyProperty="product_no" order="BEFORE" resultType="int">
			select product_table_seq.nextval from dual			
	</selectKey>
		insert into product_table 
			(product_no,
			product_category,
			product_name,
			product_price,
			product_stock,
			product_regDate,
			product_brand,
			product_skintype,
			event_no)
			
		values
			(#{product_no},
			#{product_category},
			#{product_name},
			#{product_price},
			#{product_stock},
			sysdate, 
			#{product_brand},
			#{product_skintype},
		 	1)
	</insert>
	
	<!-- <insert id="registProduct">
	<selectKey keyProperty="product_no" order="BEFORE" resultType="int">
			select product_table_seq.nextval from dual			
	</selectKey>
		insert into product_table 
			(product_no,
			product_category,
			product_name,
			product_price,
			product_stock,
			product_regDate,
			product_brand,
			product_skintype,
			event_no)
			
		values
			(#{product_no},
			#{product_category},
			#{product_name},
			#{product_price},
			#{product_stock},
			sysdate, 
			1,
			#{product_skintype},
		 	1)
	</insert>
 -->
	<select id="selectBoardList" parameterType="hashMap" resultType="hashmap">
		<![CDATA[
			select 
				product_category, 
				product_name, 
				product_img, 
				product_price, 
				product_stock,
				product_regDate
			from product_table order by product_regDate DESC
		]]>
	</select>

	
	<!-- 카테고리별 상품조회 + 페이징 -->
	<select id="categoryListWithPaging" resultType="com.forever.young.entity.Product">
		select product_no,
			product_category,
			product_name,
			product_price,
			product_stock,
			product_regDate,
			product_brand,
			product_skintype,
			event_no,
			image_save_name, image_type, image_name, brand_name
			from
		(select
			rownum rn, p.*, i.image_save_name, i.image_type, i.image_name, b.brand_name
		from
        	product_table P inner join product_img i on p.product_no = i.product_no
        	inner join brand b on p.product_brand = b.brand_num
		where
			product_category = #{category} and image_type = 'N'
			and <![CDATA[rownum <= #{paging.pageNum} * #{paging.amount}]]>
		order by
				product_regdate desc)
		<![CDATA[where rn > (#{paging.pageNum} - 1) * #{paging.amount}
		]]>
	</select>
	
	<!-- 카테고리별 상품조회(인기순) & best상품 -->
	<!-- <select id="getBest" resultType="Product">
		select
			rn, 
	        p.*,
	        I.image_save_name,
	        I.image_type,
	        I.image_name,
	        b.brand_name
		from(
		    select
		        rownum rn,
		        순위,
		        order_product
		    from(
		        select
		            order_product,
		            sum(order_amount)total,
		            dense_rank() over(order by sum(order_amount) desc) 순위
		        from
		            order_table
		        group by
		            order_product
		        )
		    )tmp
			    inner join product_table p on tmp.order_product = p.product_no
			    inner join product_img I on p.product_no = I.product_no
			    inner join brand B on p.product_brand = B.brand_num
			where
			    I.image_type='N' and P.product_category = #{category}
			order by rn
	</select>
	 -->
	<!-- 검색 필터링 -->
	<select id="productListSearch" parameterType="map" resultType="com.forever.young.entity.Product">
		select
			p.*, i.image_save_name, i.image_type, i.image_name, b.brand_name
		from
		<choose>
			<when test="order == 'rank'">
				(select
			        rownum rn,
			        순위,
			        order_product
			        from(
			        select
			            order_product,
			            sum(order_amount)total,
			            dense_rank() over(order by sum(order_amount) desc) 순위
			        from
			            order_table
			        group by
			            order_product
			        )
			    )tmp
			    inner join product_table p on tmp.order_product = p.product_no
			    inner join product_img I on p.product_no = I.product_no
				inner join brand B on p.product_brand = B.brand_num
			</when>
			<otherwise>
				product_table P inner join product_img i on p.product_no = i.product_no
        		inner join brand b on p.product_brand = b.brand_num
			</otherwise>
		</choose>
		where
			product_category = #{category} and image_type = 'N'
			<if test="type != null">
				and
				product_skintype in
				<foreach item="type" index="i" collection="type" open="(" close=")" separator=",">
					#{type}
				</foreach>
			</if>
			<if test="brand != null">
				and
				product_brand in
				<foreach item="brand" index="i" collection="brand" open="(" close=")" separator=",">
					#{brand}
				</foreach>
			</if>
		order by
			<choose>
				<when test="order == 'rPrice'">
					product_price asc
				</when>
				<when test="order == 'hPrice'">
					product_price desc
				</when>
				<when test="order == 'rank'">
					rn
				</when>
				<otherwise>
					product_regdate desc
				</otherwise>
			</choose>
	</select>
	
	<!-- 검색 및 페이징 리스트 -->
	<select id="productListSearchWithPaging" parameterType="map" resultType="com.forever.young.entity.Product">
		select
	        result.*
		from
		(select
			rownum rn, p.*, i.image_save_name, i.image_type, i.image_name, b.brand_name
		from
		<choose>
			<when test="order == 'rank'">
				(select
			        rownum rn,
			        순위,
			        order_product
			        from(
			        select
			            order_product,
			            sum(order_amount)total,
			            dense_rank() over(order by sum(order_amount) desc) 순위
			        from
			            order_table
			        group by
			            order_product
			        )
			    )tmp
			    inner join product_table p on tmp.order_product = p.product_no
			    inner join product_img I on p.product_no = I.product_no
				inner join brand B on p.product_brand = B.brand_num
			</when>
			<otherwise>
				product_table P inner join product_img i on p.product_no = i.product_no
        		inner join brand b on p.product_brand = b.brand_num
			</otherwise>
		</choose>
		where
			product_category = #{category} and image_type = 'N'
			and <![CDATA[rownum <= #{paging.pageNum} * #{paging.amount}]]>
			<if test="type != null">
				and
				product_skintype in
				<foreach item="type" index="i" collection="type" open="(" close=")" separator=",">
					#{type}
				</foreach>
			</if>
			<if test="brand != null">
				and
				product_brand in
				<foreach item="brand" index="i" collection="brand" open="(" close=")" separator=",">
					#{brand}
				</foreach>
			</if>
		order by
			<choose>
				<when test="order == 'rPrice'">
					product_price asc
				</when>
				<when test="order == 'hPrice'">
					product_price desc
				</when>
				<when test="order == 'rank'">
					rn
				</when>
				<otherwise>
					product_regdate desc
				</otherwise>
			</choose>
			) result
			<![CDATA[where rn > (#{paging.pageNum} - 1) * #{paging.amount}]]>
	</select>
	
	<!-- 전체 브랜드 조회 -->
	<select id="getBrand" resultType="Brand">
  		select * from brand
	</select>
	
	<!-- 카테고리별 상품 총 개수 -->
	<select id="getCount" resultType="int">
	<![CDATA[
		select count(*) from product_table where product_category = #{category}
	]]>
	</select>
	
	
	<!-- 브랜드별 상품조회 -->
	<select id="brandList" resultType="com.forever.young.entity.Product">
		select
			p.*, i.image_save_name, i.image_type, i.image_name
		from
        	product_table P inner join product_img i on p.product_no = i.product_no
        	inner join brand b on p.product_brand = b.brand_num
		where
			p.product_brand = #{brand} and image_type = 'N'
		order by
			product_regdate desc
	</select>
	
	<!-- 검색 필터링 -->
	<select id="brandListSearch" parameterType="map" resultType="com.forever.young.entity.Product">
		select
			p.*, i.image_save_name, i.image_type, i.image_name
		from
        	product_table P inner join product_img i on p.product_no = i.product_no
        	inner join brand b on p.product_brand = b.brand_num
		where
			p.product_brand = #{brand} and i.image_type = 'N' 
			<if test="type != null">
				and
				p.product_skintype in
				<foreach item="type" index="i" collection="type" open="(" close=")" separator=",">
					#{type}
				</foreach>
			</if>
		order by
			product_regdate desc
	</select>
	
	<!-- 브랜드별 상품 총 개수 -->
	<select id="getCountByBrand" resultType="int">
	<![CDATA[
		select count(*) from product_table where product_brand = #{brand}
	]]>
	</select>
	
	<!-- 상세게시글-->
	<select id="findByNo" parameterType="int" resultType="com.forever.young.entity.Product">
		select * from product_table where product_no=#{no}
	</select>
	

	<!-- 상세게시글 이미지 -->
	<select id="filelist" parameterType="int" resultType="com.forever.young.entity.Product">
		select * from product_img where product_no=#{no}
	</select>
	
	<!-- best 상품 -->
	<select id="getBest" resultType="Product">
		select
			rn, 
	        p.*,
	        I.image_save_name,
	        I.image_type,
	        I.image_name,
	        b.brand_name
		from(
		    select
		        rownum rn,
		        순위,
		        order_product
		    from(
		        select
		            order_product,
		            sum(order_amount)total,
		            dense_rank() over(order by sum(order_amount) desc) 순위
		        from
		            order_table
		        group by
		            order_product
		        )
		    where
		        순위 between 1 and 3
		    )tmp
			    inner join product_table p on tmp.order_product = p.product_no
			    inner join product_img I on p.product_no = I.product_no
			    inner join brand B on p.product_brand = B.brand_num
			where
			    I.image_type='N' and P.product_category = #{category}
	</select> 	
	
	
	<select id="getFindBrandProduct" resultType="Product">
		select p.product_no, p.product_name, p.product_category, p.product_price, p.product_stock, p.product_regdate from product_table p 
		INNER JOIN brand b on p.product_brand = b.brand_num  
		order by product_regdate DESC
	</select>
	
	
</mapper>